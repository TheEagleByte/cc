{
  "enabledMcpjsonServers": [
    "playwright",
    "context7",
    "sequential-thinking",
    "basic-memory"
  ],
  "enableAllProjectMcpServers": true,
  "permissions": {
    "allow": [
      "Write",
      "Edit",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__fetch__fetch",
      "Bash(cat:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(tail:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(echo:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(yarn build)",
      "Bash(yarn lint)",
      "Bash(yarn lint:*)",
      "Bash(yarn test)",
      "Bash(yarn start)",
      "Bash(yarn run:*)",
      "Bash(npm run build)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm run test)",
      "Bash(npm run start)",
      "Bash(npm run:*)",
      "Bash(pnpm run build)",
      "Bash(pnpm run lint)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run test)",
      "Bash(pnpm run start)",
      "Bash(pnpm run:*)",
      "Bash(dotnet build)",
      "Bash(dotnet restore)",
      "Bash(dotnet clean)",
      "Bash(dotnet test)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checkout:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh api:*)"
    ],
    "deny": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run ~/.claude/hooks/pre_tool_use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run ~/.claude/hooks/post_tool_use.py"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run ~/.claude/hooks/notification.py --notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run ~/.claude/hooks/stop.py --chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run ~/.claude/hooks/subagent_stop.py"
          }
        ]
      }
    ]
  }
}